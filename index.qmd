---
title: "Collaboration, Sharing & Version Control"
author: "Nils Ratnaweera"
date: 22/04/2024
format: 
  revealjs:
    theme: dark
    logo: images/zhaw_sw_neg.png
    smaller: true
    css: style.css
    navigation-mode: vertical
    number-sections: true
    number-depth: 1
    center: true
    toc: true
    toc-depth: 1
lang: en-GB
bibliography: literatur.bib
suppress-bibliography: true # otherwise, a bibliography is appended
---

# Today{.unnumbered .unlisted}


## Goals

::: {.incremental}
- Know the advantages of *simple text documents    
- Know the basics of Markdown
- Know the basics of Quarto
- Quarto Advanced Features
- Quarto Professional Features
- (Collaboration with Git and GitHub)
:::


# Literate Programming

## {data-background-image="images/pexels-anete-lusina-7256682.jpg"}

:::{.blockquote .font200}
When was the last time you spent a pleasant evening in a comfortable chair, reading a good R Script?
:::

:::{.blockquote .attribution}
-- Adapted from John Bentley (1986) "Communications of the ACM"
:::


## Donald Knuth 1984

![](images/knuth.jpg)

:::{.notes}

Literate programming is a programming paradigm introduced in 1984

:::

## Donald Knuth 1984



::::::{.columns}

::::: {.column width="40%"}
![](images/knuthweb.png)
:::::

::::: {.column width="60%"}

::::{.r-stack}

:::{.fragment .frade-in .fade-out}
> I‚Äôve stumbled across a method of composing programs that excites me very much.
>
> In fact, my enthusiasm is so great that I must warn the reader to discount much of what I shall say as the ravings of a fanatic who thinks he has just seen a great light.

:::

:::{.fragment .frade-in-then-out}

> Let us change our traditional attitude to the construction of programs:
>
> *Instead of imagining that our main task is to instruct a computer what to do, let us concentrate rather on explaining to human beings what we want a computer to do.*

:::

::::
:::::

::::::


:::{.notes}

- Donald Knuth invented this method for Programs. But we can replace the word "program" with R Script. 
- Check if the sound works (next up: video)

:::


## {data-background-video="video/knuth.mp4" data-background-size="contain"}


## Exercise üõ†Ô∏è

*Make your R-Script literate*

1. Download the File `GOT.zip` from moodle (*Game of Thrones Dataset*)
2. Unzip the File in a reasonable location
3. Open the .RProj File with RStudio
4. Run the RScript got-1.R and try to undestand what is happening
5. Make the R-Script literate by 

   > explaining to human beings what we want a computer to do



:::{.notes}

Do this as well via sharing the screen

:::

# Markup and Markdown

:::{.notes}
- Using RComments to explain your code is great, but very limiting
- We cannot properly structure our comments: Highlight words, work with images, hyperlinks etc
- This is where Markup and markdown comes into play
:::

## What is a markup language?    

- Language for structuring texts
- Machine readable (use of tags / symbols)
- Clear separation of content and formatting
- *What you see is what you mean* (WYSIWYM)

::: {.notes}

Focus on what we want to write, not what it looks like. 

:::

## Some existing markup languages

Making a text **bold** in HTML, LaTex and Markdown:

| Langauge | Example                |
|----------|------------------------|
| HTML     | `<b>Hello World</b>`   |
| LaTeX    | `\textbf{Hello World}` |
| Markdown | `**Hello World**`      |

## What is Markdown?

- Lightweight markup language for easy text formatting
- Easy to learn 
- Machine readable *and* human readable

## Markdown Syntax

```{.markdown}
# A story of a fox

The *quick* brown fox **jumps** over the lazy [dog](https://en.wikipedia.org/wiki/Dog).

![](images/fox-over-dog.jpg)
```

. . . 

<div style="height: 100px"></div>

### A story of a fox

The *quick* brown fox **jumps** over the lazy [dog](https://en.wikipedia.org/wiki/Dog).

![](images/fox-over-dog.jpg){width="400px"}

::: {.notes}
- [Markdown Basics](https://quarto.org/docs/authoring/markdown-basics.html)
- [Abbildungen](https://quarto.org/docs/authoring/figures.html)
- [Tabellen](https://quarto.org/docs/authoring/tables.html)
:::


# Quarto

## What is Quarto?

:::{.incremental}
- An open source *cli* tool
- Based on Markdown
  ![](images/rstudio-qmd-how-it-works2.png)
- Extends the standard Markdown language with useful elements (e.g. callout blocks)
- Integrates the integration of code (R, Python, Julia, SQL...)
:::

## Output formats

- `html`: Books, Slides, Blogs...
- `pdf`: Books, Slides
- `epub`: Books
- `word`: Books
- `pptx`: Slides

## Quarto Exercise 1 üõ†Ô∏è


1. Check if quarto is installed by running the following command *in your terminal*:
   
   ```{.bash}
   quarto --version
   ```
2. install quarto if necessary (‚û≤ [quarto.org](https://quarto.org))


## Quarto Exercise 2 üõ†Ô∏è


1. Create a new text file (*File* ‚Üí *New File* ‚Üí *Text File*)
2. Save as `got-2.qmd`
3. Write some prose on the analysis done in `got1-R`
4. Render the file to html by running the following code *in your terminal*

   ```{.bash}
   quarto render got-2.qmd
   ```



## Quarto Exercise 3 üõ†Ô∏è

:::{.incremental}
- Iterative development with `render`: ü´§
- `quarto preview` enables a live preview (UX: ü•∞)

  ```{.bash}
  # quarto render markdown.md
  quarto preview markdown.md
  ```
- Try it!
:::


## Quarto Exercise 4 üõ†Ô∏è

:::{.incremental}

- Markdown talks to humans
- R Code talks to humans & the computer
- Let's add the R-Code from `got-1.R` with <kbd>Ctrl</kbd>+<kbd>Alt</kbd><kbd>I</kbd>
- This adds a "fence" where we can add R-Code
- Add the R-Code from `got-1.R` into the code block
- Check your updated preview
:::


## YAML Header


:::{.incremental}
- YAML: *YAML Ain't a Markup Language*
- A machine- and human-readable way of storing structured data
- An example:  
  ```yaml
  title: Analysis of GOT Series
  author: Nils Ratnaweera
  ```
- In Quarto: Record metadata (e.g. title, author and date)
- Is inserted at the beginning of the document and enclosed with `---`
:::


## Exercise YAML Header 1 üõ†Ô∏è

- Add metadata to your Markdown file using YAML headers

```yaml
---
title: A song of ice and fire
author: Nils Ratnaweera 
---
```

## Exercise YAML Header 2 üõ†Ô∏è


- Add metadata to your Markdown file using YAML headers
- This renders your file to pdf. You might need to install `tinytext` (see message in terminal)

```{.yaml code-line-numbers="5-9"}
---
title: A song of ice and fire
author: Nils Ratnaweera 
format: pdf
---
```


## Exercise YAML Header 3 üõ†Ô∏è

```yaml
---
format: 
  pdf:            # pdf specific optons:
    toc: true     # - should a Table of Contents be published?
    toc-depth: 1  # - How many layers should be displayed in the TOC?
---
```


# Publishing HTML / Websites

## Publishing HTML Files

:::{.incremental}
- HTML can be shared publicly by creating a website
- Some options:
  - RPubs
  - QuartoPub
  - GitHub Pages
  - Netlify

:::

## Exercise Publish HTML with RPubs üõ†Ô∏è

- Create a new account on [rpubs.com](https://rpubs.com/)
- Click on the Blue Publish Button on the Top right of your script
- Choose *RPubs*
- Click on Publish


## Exercise Publish HTML with QuartoPub üõ†Ô∏è


- Create a new account on [quartopub.com](https://quartopub.com/)
- Run the following command in your terminal:

  ```{.bash}
  quarto publish quarto-pub got-2.qmd
  ```




## Exercise Publish HTML with GitHub üõ†Ô∏è

- Create a GitHub Account (‚û≤ [github.com](https://github.com/))
- Create a new Repo (`+` ‚Üí *new repository*)
  - Provide a reasonable name (e.g. GOT-Analysis)
  - Set visibility to public
  - Click on *Create repository*

## Exercise Publish HTML with GitHub üõ†Ô∏è


- Upload Files:
  - Click on *uploading an existing file*
  - Add the entire content of your RProject to the Repo
  - Click, on *Commit changes*
- Got to Settings ‚Üí Pages: in *Branch*, select *Main* instead of *None* and click on *Save*
- Got to the *Code* Tab
  - Click on the settings symbol ‚öô
  - Choose *Use your GitHub Pages website*
  - Click *Save changes*
- Go to the *Actions* Tab and wait for the worflows to complete

## Exercise Publish HTML with GitHub üõ†Ô∏è


- Got back to the *Codes* Tab and Click on the URL
  - The URL is incomplete: we have to append `got-2.html`
  - We don't have to append the filename if it's called `index.html` ‚Üí Rename `got-2.qmd` to `index.qmd` and re-render

# Versioncontrol with Git and GitHub{#sec-git-github}

---

[Git and GitHub](Git-GitHub.html)


---


